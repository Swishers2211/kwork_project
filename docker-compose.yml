version: '3.8'

services:
  backend:
    build:
      context: ./backend
    container_name: backend
    ports:
      - "8000:8000"
    networks:
      - web
    command: ["sh", "./start.sh"]
    volumes:
      - ./backend/:/app_backend
      - static_volume:/app_backend/static
      - media_volume:/app_backend/media 
    env_file:
      - .env
    depends_on:
      - postgres_db

  postgres_db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    networks:
      - web

  redis:
    image: redis:7.2.5
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - web
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: redis-server --requirepass ${REDIS_PASSWORD}

  nginx:
    image: nginx:latest
    container_name: nginx_server
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/app_backend/static
      - media_volume:/app_backend/media
    ports:
      - "80:80"
    networks:
      - web
    depends_on:
      - backend

networks:
  web:
    driver: bridge

volumes:
  postgres_data:
  static_volume:
  media_volume:
